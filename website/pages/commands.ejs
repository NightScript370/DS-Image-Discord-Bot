<!DOCTYPE html>
<html>
	<% var subtitle = "Commands" %>
	<% include ../parts/head %>
	<!-- Start content -->

	<% 
		const fs = require('fs')
		const path = require('path')

		let categories = Array.from(client.commandHandler.categories.entries());
		let catNames = categories.map(arr => arr[0]);
		let cats = categories.map(arr => arr[1]).sort((c1, c2) => c1.id.localeCompare(c2.id));

		let cmds = cats.map(cat => Array.from(cat.entries()).map(c => c[1])).flat();

		let iconlist = fs.readdirSync(path.join(process.cwd(), 'website', 'public', 'icons'));

		function iconExist(cmd) {
				return iconlist.filter(item => item === `${cmd.id}.png`).length;
		}
	%>
	
	<br>
	<h2 class="text-center">Commands</h2>
	<p class="text-center">
		This is a list of all of the available commands Yamamura can bring to a server.<br>
		To see more information, consult the discord <code>cmds</code> command
	</p>
	<div class="container-fluid">
		<div class="row">
			<div class="col-md-3 col-sm-4">
				<div id="tab-sidebar" class="nav nav-pills" role="tablist" aria-orientation="vertical">
					<%
						let defaultcategory = "Useful";
						cats.forEach(category => {
							let catCmds = cmds.filter(c => c.category.id == category).sort((a, b) => a.id.localeCompare(b.id));
							if (catCmds.length > 0) {
								%><%- `<a class="nav-link col-12 ${defaultcategory == category ? 'active' : ''}" id="${category}-tab" data-toggle="pill" href="#${category}" role="pill" aria-controls="${category}" aria-selected="${defaultcategory == category ? 'true' : 'false'}">
												${category} [${catCmds.length}]
											 </a>` %><%
							}
						});
					%>

						<a class="nav-link col-12" id="all-tab" data-toggle="tab" href="#all" role="tab" aria-controls="all" aria-selected="false">
							All Commands [<%- cmds.length %>]
						</a>
				</div>
				<br>
				<br>
			</div>
			<div class="col-md-9 col-sm-8">
				<div class="tab-content" id="myTabContent">
					<%
						cats.forEach(category => {
							let catCmds = cmds.filter(c => c.category.id == category).sort((a, b) => a.id.localeCompare(b.id));

								let cmDescription;
								let table;
								let permissions;

							let s = [];
							catCmds.forEach(cmd => {
									cmDescription = null;
									permissions = [];

									if (cmd.userPermissions)
										try {cmd.userPermissions.forEach(perm => permissions.push(`<span class="badge badge-primary">${perm}</span>`))} catch (e) {}

									switch (cmd.channel) {
										case 'guild':
											permissions.push('Server Only');
											break;
										case 'dm':
											permissions.push('Direct Messages Only');
											break;
									}

									if (!isEmpty(cmd.description)) {
										if (typeof cmd.description == 'string') {
											cmDescription = cmd.description;
										} else {
											cmDescription = cmd.description.content;
										}
									}

									permissions = permissions.join('')

									table = `
												<div class="card">
														<a class="card-header collapsed card-link" data-toggle="collapse" href="#collapse${cmd.id}">
																<img class="commandIcon" src="${iconExist(cmd) ? `/icons/${cmd.id}.png` : `/icons/blank.png`}">
																<b>${cmd.id}</b>
																<span style="float: right;">${permissions}</span>
														</a>
														<div id="collapse${cmd.id}" class="collapse" data-parent="#accordion">
												${cmDescription ? `<div class="card-body">${cmDescription}</div>` : ''}`;

									if (cmd.args) {
										table += '<ul class="list-group list-group-flush">';
										for (var arg of cmd.args) {
											if (!arg.description) {
												switch (arg.id) {
													case 'IP':
														arg.description = "This is the server's IP address.";
														break;
													case 'images':
														arg.description = 'These are the images for the command. This can be either attachments, user mentions, user IDs, user names, links or if the channel has an image posted beforehand within the past 50 messages: none. If you use multiple links and/or attachments, you can even layer the image.';
														break;
												}
											}
 
											table += `<li class="list-group-item"><b>${arg.id}</b> ${arg.description ? `- ${arg.description}` : ''}</li>`;
										}
										table += '</ul>';
									}

									table += '</div></div>';
									s.push(table)
							});
							s = s.join("");
							if (s.length > 0) {
								%><%- `<div class="tab-pane fade ${category == defaultcategory ? 'show active' : ''}" id="${category}" role="tabpanel" aria-labelledby="${category}-tab">
												<h3> ${category} [${catCmds.length}] </h3>
												<div id="accordion">${s}</div>
											 </div>` %><%
							}
						});
					%>

					<div class="tab-pane fade" id="all" role="tabpanel" aria-labelledby="all-tab">
						<%
							cats.forEach(category => {
								let catCmds = cmds.filter(c => c.category.id == category).sort((a, b) => a.id.localeCompare(b.id));

								let cmDescription;
								let table;
								let permissions;

								let s = [];
								catCmds.forEach(cmd => {
									cmDescription = null;
									permissions = [];

									if (cmd.userPermissions)
										try {cmd.userPermissions.forEach(perm => permissions.push(`<span class="badge badge-primary">${perm}</span>`))} catch (e) {}

									switch (cmd.channel) {
										case 'guild':
											permissions.push('Server Only');
											break;
										case 'dm':
											permissions.push('Direct Messages Only');
											break;
									}

									if (!isEmpty(cmd.description)) {
										if (typeof cmd.description == 'string') {
											cmDescription = cmd.description;
										} else {
											cmDescription = cmd.description.content;
										}
									}

									permissions = permissions.join('')

									table = `
												<div class="card">
														<a class="card-header collapsed card-link" data-toggle="collapse" href="#collapse${cmd.id}-all">
																<img class="commandIcon" src="${iconExist(cmd) ? `/icons/${cmd.id}.png` : `/icons/blank.png`}">
																<b>${cmd.id}</b>
																<span style="float: right;">${permissions}</span>
														</a>
														<div id="collapse${cmd.id}-all" class="collapse" data-parent="#accordion">
												${cmDescription ? `<div class="card-body">${cmDescription}</div>` : ''}`;

									if (cmd.args) {
										table += '<ul class="list-group list-group-flush">';
										for (var arg of cmd.args) {
											if (!arg.description) {
												switch (arg.id) {
													case 'IP':
														arg.description = "This is the server's IP address.";
														break;
													case 'images':
														arg.description = 'These are the images for the command. This can be either attachments, user mentions, user IDs, user names, links or if the channel has an image posted beforehand within the past 50 messages: none. If you use multiple links and/or attachments, you can even layer the image.';
														break;
												}
											}
 
											table += `<li class="list-group-item"><b>${arg.id}</b> ${arg.description ? `- ${arg.description}` : ''}</li>`;
										}
										table += '</ul>';
									}

									table += '</div></div>';
									s.push(table)
							});
								s = s.join("");
								if (s.length > 0) {
									%><%- `<h3> ${category} [${catCmds.length}] </h3>
												<div id="accordion">${s}</div><br>` %><%
								}
							});
						%>
					</div>
				</div>
			</div>
		</div>
	</div>

	<!-- End content -->
	<% include ../parts/footer %>
</html>